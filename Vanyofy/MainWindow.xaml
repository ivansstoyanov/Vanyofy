<Window x:Class="Vanyofy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Vanyofy"
        xmlns:control = "clr-namespace:Vanyofy" 
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:commands="clr-namespace:Vanyofy.Commands"
        mc:Ignorable="d"
        Closing="Window_Closing" 
        Closed="Window_Closed"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Title="Vanyofy" Height="350" Width="480">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"  />

        <Style x:Key="MyFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Margin="3 2">
                            <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                            <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ShadowStyle">
            <Setter Property="Control.Foreground" Value="LightGray" />
        </Style>

        <Style x:Key="InformButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="11px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                        <GradientStop Color="#FFFFD190" Offset="0.2"/>
                        <GradientStop Color="Orange" Offset="0.85"/>
                        <GradientStop Color="#FFFFD190" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
        				BorderThickness="0"
        				Padding="4,2" 
        				BorderBrush="DarkGray" 
        				CornerRadius="3" 
        				Background="{TemplateBinding Background}">
                            <Grid >
                                <ContentPresenter HorizontalAlignment="Center" 
        	                           VerticalAlignment="Center" Name="contentShadow" 
        					Style="{StaticResource ShadowStyle}">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform X="1.0" Y="1.0" />
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                                <Setter Property="Foreground" Value="#FF4788c8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                            <GradientStop Color="#FFFFD190" Offset="0.35"/>
                                            <GradientStop Color="Orange" Offset="0.95"/>
                                            <GradientStop Color="#FFFFD190" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="content" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.7" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="AppAppTitleBar" Height="35" />
            <RowDefinition x:Name="AppAlarmSettingsRow"  Height="100" />
            <RowDefinition x:Name="AppAlarmsListRow" Height="*" />
        </Grid.RowDefinitions>
        
        <Grid x:Name="AppTitleBar" MouseDown="Window_MouseDown" Width="410" HorizontalAlignment="Left" Background="#333">
            <Border BorderThickness="0,0,0,2" BorderBrush="Orange" />
            <DockPanel x:Name="RootWindow">
                <DockPanel x:Name="TitleBar" Width="410">
                    <Button x:Name="CloseButton" Style="{StaticResource InformButton}" DockPanel.Dock="Right" Width="30" Height="30" Click="CloseButton_Click">
                        <Grid>
                            <Line Stroke="Black" X1="0" Y1="0" X2="20" Y2="20" StrokeThickness="3" />
                            <Line Stroke="Black" X1="20" Y1="0" X2="0" Y2="20" StrokeThickness="3" />
                        </Grid>
                    </Button>
                    <Button Style="{StaticResource InformButton}" DockPanel.Dock="Right" Click="AddNewAlarm">(0) New \/</Button>
                    <StackPanel>
                        <Image Source="/Icons/home.ico" Width="30" Height="30" />
                    </StackPanel>
                    <TextBlock HorizontalAlignment="Left" Width="380" FontSize="22" Padding="6,0" Foreground="#eee">Vanyofy</TextBlock>
                </DockPanel>
            </DockPanel>


            <tb:TaskbarIcon
              x:Name="MyNotifyIcon"
              IconSource="/Icons/home.ico"
              ToolTipText="hello vanyo"
              TrayContextMenuOpen="MyNotifyIcon_TrayContextMenuOpen"
              PreviewTrayContextMenuOpen="MyNotifyIcon_PreviewTrayContextMenuOpen">
                <!-- Set a simple context menu  -->
                <!-- the data context of the context menu is the NotifyIcon itself (see more about this in DataBinding samples) -->
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Vanyofy"
                                  Command="{commands:ShowSampleWindowCommand}"
                                  CommandParameter="{Binding}">
                            <MenuItem.Icon>
                                <Image Width="16"
                                       Height="16"
                                       Source="/Icons/home.ico" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />

                        <MenuItem Header="Hide Vanyofy"
                                  Command="{commands:HideSampleWindowCommand}"
                                  CommandParameter="{Binding}">
                            <MenuItem.Icon>
                                <Image Width="16"
                                       Height="16"
                                       Source="/Icons/Remove.png" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />

                        <MenuItem Header="Exit"
                                  Command="{commands:CloseWindowCommand}"
                                  CommandParameter="{Binding}">
                            <MenuItem.Icon>
                                <Image Width="16"
                                       Height="16"
                                       Source="/Icons/Close.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
        </Grid>

        
        <Grid x:Name="AppAlarmSettings" Grid.Row="1">            

        </Grid>

        
        <Grid x:Name="AppAlarmsList" Grid.Row="2">
            <ListBox x:Name="AlarmsList" 
                     Background="Transparent" BorderBrush="Transparent" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                     SelectedItem="{Binding Path=SelectedVersion}" SelectionMode="Single" IsSynchronizedWithCurrentItem="True">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="AllowDrop" Value="True" />
                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="s_PreviewMouseLeftButtonDown"/>
                        <EventSetter Event="Drop" Handler="listbox1_Drop"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Background" Value="Green" />
                                <Setter Property="Foreground" Value="Black" />
                                
                            </Trigger>
                        </Style.Triggers>
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                        </Style.Resources>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="AlarmSettings" Tag="{Binding Id}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="405" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid Background="Tomato" Tag="{Binding Id}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="340" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid Cursor="SizeAll" Margin="5">
                                    <Line Stroke="Gray" X1="0" Y1="3" X2="20" Y2="3" StrokeThickness="3" Tag="draggable" />
                                    <Line Stroke="Black" X1="0" Y1="6" X2="20" Y2="6" StrokeThickness="3" Tag="draggable" />
                                    <Line Stroke="Gray" X1="0" Y1="9" X2="20" Y2="9" StrokeThickness="3" Tag="draggable" />
                                    <Line Stroke="Black" X1="0" Y1="12" X2="20" Y2="12" StrokeThickness="3" Tag="draggable" />
                                    <Line Stroke="Gray" X1="0" Y1="15" X2="20" Y2="15" StrokeThickness="3" Tag="draggable" />
                                </Grid>

                                <Label Grid.Column="1" Content="{Binding Name}" />
                                
                                <Button Grid.Column="2" x:Name="SetActive"
                                    Style="{StaticResource InformButton}" 
                                    Visibility="{Binding Active, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                    Width="30" Height="30" 
                                    Tag="false" Click="ActivateAlarm">
                                    ON
                                </Button>
                                <Button Grid.Column="2" x:Name="SetNotActive"
                                    Style="{StaticResource InformButton}" 
                                    Visibility="{Binding NotActive, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                    Width="30" Height="30"
                                    Tag="true" Click="ActivateAlarm">
                                    OFF
                                </Button>
                            </Grid>

                            <Grid Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" x:Name="EditCurrent"
                                    Style="{StaticResource InformButton}" 
                                    Width="30" Height="30" >
                                    <Grid>
                                        <Line Stroke="Black" X1="10" Y1="0" X2="10" Y2="20" StrokeThickness="3" />
                                    </Grid>
                                </Button>
                                <Button Grid.Column="1" x:Name="DeleteCurrent"
                                    Style="{StaticResource InformButton}"                                     
                                    Width="30" Height="30" >
                                    <Grid>
                                        <Line Stroke="Black" X1="20" Y1="10" X2="0" Y2="10" StrokeThickness="3"  />
                                    </Grid>
                                </Button>
                            </Grid>

                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        
        <!--<Grid x:Name="AlarmSettings" Grid.Row="1" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="60"/>
                <RowDefinition Height="90"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>
            
            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>                

                <TextBlock Grid.Row="0" Text="Set Time:" FontSize="22" Foreground="white" />
                
                <control:NumberSetter Grid.Column="1" TestName="asdasd" Width="60" HorizontalAlignment="Left"/>
                <TextBlock Grid.Row="0" Text="Set Time:" FontSize="22" Foreground="white" />
                
                <control:NumberSetter Grid.Column="2" TestName="asdasd" Width="60" HorizontalAlignment="Left"/>                
            </Grid>
            
            <Grid Margin="0,10" Grid.Row="1" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />    
                <TextBlock Grid.Column="0" Text="Mon" FontSize="16" Margin="0,20,0,0" Foreground="white" />

                <CheckBox Grid.Column="1" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Column="1" Text="Tue" FontSize="16" Margin="0,20,0,0" Foreground="white" />

                <CheckBox Grid.Column="2" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Column="2" Text="Wed" FontSize="16" Margin="0,20,0,0" Foreground="white" />

                <CheckBox Grid.Column="3" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Column="3" Text="Thu" FontSize="16" Margin="0,20,0,0" Foreground="white" />

                <CheckBox Grid.Column="4" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Column="4" Text="Fri" FontSize="16" Margin="0,20,0,0" Foreground="white" />

                <CheckBox Grid.Column="5" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Column="5" Text="Sat" FontSize="16" Margin="0,20,0,0" Foreground="white" />

                <CheckBox Grid.Column="6" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Column="6" Text="Sun" FontSize="16" Margin="0,20,0,0" Foreground="white" />


            </Grid>

            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Set Playlist:" FontSize="22" Foreground="white" />

                <TextBox Grid.Row="1" Background="orange" FontSize="20" TextAlignment="Right"/>
            </Grid>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>

                <CheckBox Grid.Row="0"  HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Row="0" Text="Shuffle" FontSize="16" Margin="30,0,0,0" Foreground="white" />

                <CheckBox Grid.Column="1"  HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" />
                <TextBlock Grid.Column="1" Text="Increasing" FontSize="16" Margin="30,0,0,0" Foreground="white" />

                <TextBlock Grid.Row="1" Grid.Column="1" Text="By:" FontSize="16" Foreground="white" />
                <TextBox Grid.Row="1" Grid.Column="1" Height="20" Width="30" HorizontalAlignment="Left" Margin="30,00,0,0" VerticalAlignment="Top" Background="orange" FontSize="20" TextAlignment="Right"/>
                <TextBlock Grid.Row="1" Grid.Column="1" Text="For:" Margin="0,25,0,0" FontSize="16" Foreground="white" />
                <TextBox Grid.Row="1" Grid.Column="1" Height="20" Width="30" HorizontalAlignment="Left" Margin="30,25,0,0" VerticalAlignment="Top" Background="orange" FontSize="20" TextAlignment="Right"/>
                <TextBlock Grid.Row="1" Grid.Column="1" Text="Minutes" Margin="70,25,0,0" FontSize="16" Foreground="white" />
            </Grid>

            

            <Button Grid.Row="4" Style="{StaticResource InformButton}" Height="25" Width="90" VerticalAlignment="Bottom" HorizontalAlignment="Right">Set Active</Button>


        </Grid>-->
        
    </Grid>
</Window>
